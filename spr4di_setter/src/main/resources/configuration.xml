<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- 둘이 이름이 같을때 다르게 하기위해 접두사 xsi -->
	<!-- 이 자유로움에 <bean>으로 제한을 걸어줌 -->
	
	<!-- 1. 일반적인 setter 사용 -->
	<!-- <bean id="myProcess" class="pack.MyProcess">  -->
	<!-- 생성자를 부르는것.MyProcess클래스의 myProcess기본생성자 호출. -->
	<!-- <property name="nn" value="25" />   -->
	<!-- setNn를 불러 값25를 넣어준다. -->
	<!--  <property name="name" value="김치국" /> -->
	<!-- <property name="showData" ref="show" />-->
	<!-- 객체라 value로 줄수가 없다. 별도의 객체를 하단에 적어주고 ref로 그주소가져오기 -->
	<!--</bean>
	<bean id="show" class="pack.ShowData" />-->


	<!-- 2. 일반적인 setter 사용 -->
	<!--  
	<bean id="myProcess" class="pack.MyProcess">
		<property name="nn">
			<value>26</value>
		</property>
		<property name="name">
			<value>김만두</value>
		</property>
		<property name="showData">
			<bean class="pack.ShowData" />
		</property>
	</bean>
	-->
	
	<!-- 3. xml namespace로 setter 사용 -->
	<bean id="myProcess" class="pack.MyProcess"
		p:nn="27"
		p:name="김찐빵"
		p:showData-ref="show"/>
	
	<bean id="show" class="pack.ShowData" />
</beans>